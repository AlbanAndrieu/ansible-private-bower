---
sudo: required

env:
#  - distro: centos7
#    distribution: centos
#    version: 7
#    init: /usr/lib/systemd/systemd
#    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
#    playbook: test.yml
#    PRIVATE_BOWER_VERSION: 1.0.7
#  - distro: centos6
#    distribution: centos
#    version: 6
#    init: /sbin/init
#    run_opts: "--privileged"
#    playbook: test.yml
#    PRIVATE_BOWER_VERSION: 1.0.7
#  - distro: ubuntu1604
#    distribution: ubuntu
#    version: 16.04
#    init: /lib/systemd/systemd
#    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
#    playbook: test.yml
#    PRIVATE_BOWER_VERSION: 1.0.7
  - distro: ubuntu1404
    distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: "--privileged"
    playbook: test.yml
    PRIVATE_BOWER_VERSION: 1.0.7
#  - distro: ubuntu1604
#    distribution: ubuntu
#    version: 16.04
#    init: /sbin/init
#    run_opts: "--privileged"
#    playbook: test.yml
#    PRIVATE_BOWER_VERSION: 1.0.7
#  - distro: debian8
#    distribution: debian
#    version: 8
#    init: /lib/systemd/systemd
#    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
#    playbook: test.yml
#    PRIVATE_BOWER_VERSION: 1.0.7

services:
  - docker

before_install:
  # Pull container.
  - 'sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'
  #- 'sudo docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  - container_id=$(mktemp)
  # Run container in detached state.
  - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}"'
  #- 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Ansible version.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible --version; git --version'

  # Ansible galaxy.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-galaxy search nabla --version'
  #- 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-galaxy setup --list'
  #- 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-galaxy install AlbanAndrieu.java'
  #- 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm git clone https://github.com/AlbanAndrieu/ansible-java.git /etc/ansible/roles/java'
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-galaxy install -r /etc/ansible/roles/role_under_test/tests/requirements.yml'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} -e "private_bower_version=$PRIVATE_BOWER_VERSION"'

  # Test role idempotence.
  - idempotence=$(mktemp)
  - sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} -e "private_bower_version=$PRIVATE_BOWER_VERSION" | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Ensure private-bower is installed and at the right version.
  #- 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm which /usr/local/bin/private-bower'

  # Clean up
  - 'sudo docker stop "$(cat ${container_id})"'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
