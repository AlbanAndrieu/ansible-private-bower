---
# This playbook contains common plays that will be run on all nodes.


- name: private-bower | Install screen
  action: "{{ ansible_pkg_mgr}} name={{ item }} update_cache=yes state={{ private_bower_pkg_state|default('present') }}"
  tags: cmake
  with_items:
   - screen
  tags: private_bower_setup
  become: yes

- name: private-bower | Packages
  npm: >
    name={{ item }}
    state=present
    global=yes
    version={{ private_bower_version }}
  with_items:
    - private-bower
  become: yes
  tags: private_bower_setup

- name: private-bower | Copy the private-bower init script
  template:
    src: "private-bower.sh.j2"
    dest: "/etc/init.d/private-bower"
    owner: root
    group: root
    mode: 0755
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  become: yes
  tags: configure

#- name: private-bower | Copy the private-bower init conf script
#  template:
#    src: "private-bower.conf.j2"
#    dest: "/etc/init/private-bower.conf"
#    owner: root
#    group: root
#    mode: 0644
#  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
#  become: yes
#  tags: configure

- name: private-bower | Copy the private-bower init service script
  template:
    src: "private-bower.service.j2"
    dest: "/lib/systemd/system/private-bower.service"
    owner: root
    group: root
    mode: 0644
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  become: yes
  tags: configure

- name: private-bower | Copy the private-bower backup script
  template:
    src: "rivate-bower-backup.sh.j2"
    dest: "{{ private_bower_base_dir }}/bin/backup.sh"
    owner: root
    group: root
    mode: 0755
  when: private_bower_backup_enabled
  tags: configure

- name: private-bower | Copy the private-bower config file
  template:
    src: "{{ private_bower_conf }}.j2"
    dest: "{{ private_bower_base_dir }}/{{ private_bower_conf }}"
    owner: root
    group: root
    mode: 0755
  when: private_bower_backup_enabled
  tags: configure

#TODO add to user
#export GIT_SSL_NO_VERIFY=true
#export GIT_CURL_VERBOSE=1

- name: private-bower | Update git configuration (http.sslVerify)
  action: command git config --global http.sslVerify {{ shell_git_ssl }}
  become: yes
  changed_when: false

- name: private-bower | Start the private-bower service
  service: name=private-bower state=started enabled=true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags: service
  become: yes

- debug: msg=" private-bower | Avaialable at http://localhost:5678/"
